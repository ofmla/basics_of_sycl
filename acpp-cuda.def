# Baseline (2.13 GiB)
Bootstrap: docker
From: ubuntu:22.04
# debian:bookworm-slim

%arguments 
  DEBIAN_FRONTEND=noninteractive

%post
  echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
# CUDA compiler (1.35 GiB)
  apt-get update \
  && apt-get install -y build-essential python3 git cmake lsb-release wget software-properties-common gnupg \
  && wget -q -O cuda-keyring.deb https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb \
  && dpkg -i cuda-keyring.deb && rm cuda-keyring.deb \
  && apt-get install -y --no-install-recommends libboost-fiber-dev \
  && apt-get install -y --no-install-recommends libboost-context-dev \
  && apt-get install -y --no-install-recommends libboost-test-dev \
  && apt-get install -y --no-install-recommends libnuma-dev \
  && apt-get install -y --no-install-recommends nvidia-open \
  && apt-get install -y --no-install-recommends cuda-compiler-12-8 \
  && apt-get -y clean autoremove \
  && rm -rf /var/lib/apt/lists/*

# LLVM (0.93 GiB)
  wget --no-check-certificate https://apt.llvm.org/llvm.sh \
  && chmod +x llvm.sh \
  && ./llvm.sh 16 \
  && apt install -y libclang-16-dev clang-tools-16 libomp-16-dev llvm-16-dev lld-16

# AdaptiveCpp (0.05 GiB)
  git clone -c http.sslverify=false --branch v25.02.0 --single-branch https://github.com/AdaptiveCpp/AdaptiveCpp \
  && mkdir -p AdaptiveCpp/build \
  && cd AdaptiveCpp/build && cmake .. && make -j install


